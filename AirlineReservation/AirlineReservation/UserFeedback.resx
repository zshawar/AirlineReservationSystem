<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>